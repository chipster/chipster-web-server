conf-path: conf/chipster.yaml

# Service accounts
# all config items starting with "service-password-" will be automatically authenticated as Role.SERVER 

service-password-auth: auth
service-password-session-db: session-db
service-password-service-locator: service-locator
service-password-scheduler: scheduler
service-password-comp: comp
service-password-file-broker: file-broker
service-password-session-worker: session-worker
service-password-web-server: web-server
service-password-toolbox: toolbox
service-password-job-history: job-history
service-password-backup: backup

# SSO accounts
# all config items starting with "sso-service-password-" will be automatically authenticated as Role.SSO, none by default
# sso-service-password-shibboleth: shibboleth

# Admin accounts
# all config items starting with "admin-username-" (username in the value) will be automatically authenticated as Role.ADMIN
admin-username-1: admin

   
# Internal and external service addresses

url-int-web-server: http://{{public-ip}}:8000
url-ext-web-server: http://{{public-ip}}:8000
url-int-auth: http://{{public-ip}}:8002
url-ext-auth: http://{{public-ip}}:8002
url-int-service-locator: http://{{public-ip}}:8003
url-ext-service-locator: http://{{public-ip}}:8003 
url-int-session-db: http://{{public-ip}}:8004
url-ext-session-db: http://{{public-ip}}:8004
url-int-session-db-events: ws://{{public-ip}}:8005
url-ext-session-db-events: ws://{{public-ip}}:8005
url-int-scheduler: ws://{{public-ip}}:8006
url-int-file-broker: http://{{public-ip}}:8007
url-ext-file-broker: http://{{public-ip}}:8007
url-int-toolbox: http://{{public-ip}}:8008
url-ext-toolbox: http://{{public-ip}}:8008
url-int-session-worker: http://{{public-ip}}:8009
url-ext-session-worker: http://{{public-ip}}:8009
url-int-type-service: http://{{public-ip}}:8010
url-ext-type-service: http://{{public-ip}}:8010

url-admin-ext-web-server: http://{{admin-ip}}:8100
url-admin-ext-auth: http://{{admin-ip}}:8102
url-admin-ext-service-locator: http://{{admin-ip}}:8103
url-admin-ext-session-db: http://{{admin-ip}}:8104
url-admin-ext-scheduler: http://{{admin-ip}}:8106
url-admin-ext-file-broker: http://{{admin-ip}}:8107
url-admin-ext-toolbox: http://{{admin-ip}}:8108
url-admin-ext-session-worker: http://{{admin-ip}}:8109
url-admin-ext-type-service: http://{{admin-ip}}:8110
url-admin-ext-comp: http://{{admin-ip}}:8111
url-admin-ext-backup: http://{{admin-ip}}:8115
url-admin-ext-job-history: http://{{admin-ip}}:8114

url-m2m-int-auth: http://{{public-ip}}:8013    

# Address for the server to bind

url-bind-web-server: http://{{bind-ip}}:8000
url-bind-auth: http://{{bind-ip}}:8002
url-bind-service-locator: http://{{bind-ip}}:8003
url-bind-session-db: http://{{bind-ip}}:8004
url-bind-session-db-events: ws://{{bind-ip}}:8005
url-bind-scheduler: ws://{{bind-ip}}:8006
url-bind-file-broker: http://{{bind-ip}}:8007
url-bind-toolbox: http://{{bind-ip}}:8008
url-bind-session-worker: http://{{bind-ip}}:8009
url-bind-type-service: http://{{bind-ip}}:8010
url-bind-sso: ajp://127.0.0.1:8012
url-bind-job-history: http://{{bind-ip}}:8014

url-admin-bind-web-server: http://{{admin-bind-ip}}:8100
url-admin-bind-auth: http://{{admin-bind-ip}}:8102
url-admin-bind-service-locator: http://{{admin-bind-ip}}:8103
url-admin-bind-session-db: http://{{admin-bind-ip}}:8104
url-admin-bind-scheduler: http://{{admin-bind-ip}}:8106
url-admin-bind-file-broker: http://{{admin-bind-ip}}:8107
url-admin-bind-toolbox: http://{{admin-bind-ip}}:8108
url-admin-bind-session-worker: http://{{admin-bind-ip}}:8109
url-admin-bind-type-service: http://{{admin-bind-ip}}:8110
url-admin-bind-comp: http://{{admin-bind-ip}}:8111
url-admin-bind-job-history: http://{{admin-bind-ip}}:8114
url-admin-bind-backup: http://{{admin-bind-ip}}:8115

# Single sing-on usernames (defined above with config key "sso-service-passowrd-") can login anyone 
# in this service (port 8013 by default)
# This must be disabled by default. If you configure this, make sure you have
# 1) set a proper password for the SSO username
# 2) firewall this port, only the SSO service needs to access it 
url-m2m-bind-auth: ""


# DB config defaults. Can be changed with these config keys for all the databases or overridden with <key>-<role> for individual roles 

db-show-sql: false
db-c3p0-min-size: ""
db-dialect: org.hibernate.dialect.PostgreSQLDialect
db-driver: org.postgresql.Driver
db-user: user
# This is just a placeholder, because it wouldn't make sense to try to restore all the databaes from the same file. Set this for individual role 
# according to instructions above.
db-restore-key: ""
db-export-schema: false
# fallback to in-memory db if connection to the configured db fails, disable in production
db-fallback: true


# db backups

backup-s3-endpoint: object.pouta.csc.fi
backup-s3-region: regionOne
backup-s3-access-key: ""
backup-s3-secret-key: ""
backup-s3-signer-override: S3SignerType
backup-bucket: ""
backup-time: 01:10

# hours, append a dash and role tune services one by one
backup-interval: 24
backup-daily-count: 90
backup-monthly-count: 24

# encrypt backups with the public key of the recipient (key must be imported in gpg)
backup-gpg-public-key: ""
backup-gpg-program: gpg2
# use symmetric encryption for the backups
backup-gpg-passphrase: ""

# auth

auth-monitoring-password: monitoring
auth-jaas-prefix: jaas

db-url-auth: jdbc:postgresql://localhost:5432/auth_db
db-pass-auth: ""

# auth OpenID Connect
# register multiple oidc providers by inventing an name for each provider and appending 
# a dash and the name to each config (e.g. "-google") 

# server which hosts the discovery document in path /.well-known/openid-configuration, e.g. https://accounts.google.com
auth-oidc-issuer: ""
# client_id which you get from to oidc provider when you register your application
auth-oidc-client-id: ""
# Chipster callback url
auth-oidc-redirect-uri: http://{{public-ip}}:8000/auth/oidc/haka/callback
# "id_token" for implicit flow, "code" for authorization code flow
auth-oidc-response-type: id_token
# url or client path to the logo to show on the login page 
auth-oidc-logo: ""
# order of the logos on the login page, ascending
auth-oidc-priority: 1
# store the email only if the claim "verified_email" is true
auth-oidc-verified-email-only: true
# claim name for the organization
auth-oidc-claim-organization: ""
# claim name of the previous user ID, whose sessions should be moved to the current user
auth-oidc-claim-previous-user-id: ""

 
# comp

# max number of jobs run simultaneously
comp-max-jobs: 5
# time after which a scheduled job is removed if there is no response from the scheduler
comp-schedule-timeout: 10
# delay before sending the job offer message, multiplied by number of scheduled jobs, milliseconds
comp-offer-delay: 100
# should job specific temporary directory be sweeped after job execution
comp-sweep-work-dir: true
# schedule timeout check interval, milliseconds
comp-timeout-check-interval: 1000
# how of to send a comp available message, milliseconds
comp-status-interval: 30000
# name of the module to enable or disable
comp-module-filter-name: kielipankki
# 'exclude' disables the specified module and enables all other modules, 'include' enables the specified module and disables all other modules
comp-module-filter-mode: exclude 
# how often to monitor job resource usage or -1 to disable it, milliseconds
comp-resource-monitoring-interval: 10000
# timeout after which a job is killed, seconds
comp-job-timeout: 604800 # a week

# scheduler

# max time for comps to decide if it can run the job, seconds
scheduler-wait-timeout: 5
# max time for new job to wait for available comp, seconds
scheduler-wait-runnable-timeout: 600
# how soon the job can be rescheduled, seconds
scheduler-schedule-timeout: 1
# how long to wait for job heartbeats before giving up, seconds
scheduler-heartbeat-lost-timeout: 90
# how often to check job timeouts, seconds
scheduler-job-timer-interval: 1
# max number of scheduled and running job slots per user
scheduler-max-scheduled-and-running-slots-per-user: 10
# how many job (slots) can be waiting for the free running slots (per user limit)
scheduler-max-new-slots-per-user: 1000
# how long a job can wait for the free slot (per user limit), seconds
scheduler-wait-new-slots-per-user-timeout: 604800 # a week


# session-db 
    
# allow sharing to everyone only for one username, empty allows for everybody
session-db-restrict-sharing-to-everyone: jaas/example_session_owner
db-url-session-db: jdbc:postgresql://localhost:5432/session_db_db
db-pass-session-db: ""

session-db-max-share-count: 100

#job-history-db
db-url-job-history: jdbc:postgresql://localhost:5432/job_history_db
db-pass-job-history: ""

# web-server

web-server-web-root-path: ../chipster-web/src


# toolbox

toolbox-tools-bin-path: /opt/chipster/tools

# file-broker

# how long to wait for connections to complete after receiving SIGINT, seconds
file-broker-shutdown-timeout: 3600

# session-worker

file-broker-shutdown-timeout: 3600

session-worker-smtp-host: ""
session-worker-smtp-username: ""
session-worker-smtp-tls: false
session-worker-smtp-auth: false
session-worker-smtp-from: ""
session-worker-smtp-from-name: Chipster
session-worker-smtp-port: 25
session-worker-smtp-password: ""

session-worker-support-email-chipster: ""
# 1440 minutes = 24 hours
session-worker-support-throttle-period: 1440
session-worker-support-throttle-request-count: 20
session-worker-support-session-owner: jaas/support_session_owner
# days
session-worker-support-session-delete-after: 60 

# shared

# when to timeout idle websocket connections, milliseconds. Set to zero to wait indefinitely.
websocket-idle-timeout: 300000

# send regular ping messages to prevent idle timeouts, 0 to disable
websocket-ping-interval: 120000

# variables

variable-public-ip: 127.0.0.1
variable-admin-ip: 127.0.0.1 
variable-bind-ip: 0.0.0.0
variable-admin-bind-ip: 0.0.0.0

