apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
//apply plugin: 'checkstyle'

defaultTasks 'distTar'

repositories {
    mavenCentral()
    flatDir {
        dirs "."
    }

    flatDir {
        dirs "chipster-dist"
    }
}

distTar { 
	// to get .tar.gz instead of .tgz		
     extension = "tar.gz" 
     compression = Compression.GZIP 
} 


//test {
//    testLogging.showStandardStreams = true
//}

// option to set java version on command line
// ./gradlew -P javaVersion=8
ext.javaVersion = project.hasProperty('javaVersion') ? project.getProperty('javaVersion') : '15'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

//mainClassName = "fi.csc.chipster.toolbox.ToolboxService"
mainClassName = "fi.csc.chipster.rest.ServerLauncher"

jar { 
	exclude 'log4j2-test.xml' 
} 

// use log4j2.xml when running
sourceSets {
  main {
    resources {
      exclude 'log4j2-test.xml'
    }
  }
}
  

run {
    standardInput = System.in
}


//checkstyle {
//    configFile = 'config/checkstyle/google_checks.xml' as File
//    ignoreFailures = true
//}

//tasks.withType(Checkstyle) {
//    include "fi/csc/chipster/toolbox/**"
//}

test {
    //exclude "fi/csc/chipster/sessiondb/AdminResourceTest.class"
    //exclude "fi/csc/chipster/sessiondb/EventTest.class"
    //exclude "fi/csc/chipster/scheduler/SchedulerTest.class"

}


task checkTools(type: JavaExec) {
  dependsOn classes
  classpath sourceSets.test.runtimeClasspath
  main = "fi.csc.chipster.toolbox.ToolboxLoadTest"
}


dependencies {

	// logging
    compile "org.apache.logging.log4j:log4j-api:+"
    compile "org.apache.logging.log4j:log4j-core:+"
    compile "org.apache.logging.log4j:log4j-jul:+"
    compile "org.apache.logging.log4j:log4j-slf4j18-impl:+"

    // jersey
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:3.0.0"
    compile "org.glassfish.jersey.inject:jersey-hk2:3.0.0"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:3.0.0"
    
    // old xml sessions
    //compile "jakarta.xml.bind:jakarta.xml.bind-api:+"
    
    // Jersey in Jetty (session-worker)            
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:3.0.0"    
    
    // jetty for session-worker servlet
    compile "org.eclipse.jetty:jetty-servlet:11.0.0"
    compile "org.eclipse.jetty:jetty-server:11.0.0"
        
    // jackson
	compile "com.fasterxml.jackson.core:jackson-core:2.12.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.12.0"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.12.0"
//	compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.12.0"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.0"
    
    // config files
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.0"
	
    // hibernate
    compile "org.hibernate:hibernate-core:5.4.25.Final"
    compile "org.hibernate:hibernate-c3p0:5.4.25.Final"
    compile "com.h2database:h2:1.4.200"    
    compile "org.postgresql:postgresql:+"
    
    // flyway
    compile "org.flywaydb:flyway-core:7.+"
    
    // db backups
    compile "com.amazonaws:aws-java-sdk-s3:+"

    // websockets
    //compile "javax.websocket:javax.websocket-api:+"
    compile "org.eclipse.jetty.websocket:websocket-jakarta-server:11.0.0"   
    compile "org.glassfish.tyrus:tyrus-client:+"
    compile "org.glassfish.tyrus:tyrus-container-grizzly-client:+"
    
    // cache settings in web-server
    compile "org.eclipse.jetty:jetty-rewrite:11.0.0"

	// other
    compile "commons-io:commons-io:+"
    compile "org.apache.commons:commons-text:+"
    
    // rxJava
    compile "io.reactivex.rxjava3:rxjava:3.+"
    
    compile "com.sun.mail:javax.mail:+"
    
    // tsv parser
    compile "com.univocity:univocity-parsers:+"
    
    // OpenID Connect
    compile "com.nimbusds:oauth2-oidc-sdk:+"
    
    // JWT
    compile 'io.jsonwebtoken:jjwt-api:+',
    		'org.bouncycastle:bcpkix-jdk15on:+'
    runtime 'io.jsonwebtoken:jjwt-impl:+',
            // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
            //'org.bouncycastle:bcprov-jdk15on:1.60',
            'io.jsonwebtoken:jjwt-jackson:+'
            
    // Chipster Java tools
	compile "com.github.samtools:htsjdk:2.6.1"            
 
    testCompile "junit:junit:4.+"
}
