apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
//apply plugin: 'checkstyle'

defaultTasks 'distTar'

repositories {
    mavenCentral()
    flatDir {
        dirs "."
    }

    flatDir {
        dirs "chipster-dist"
    }
}

distTar { 
	// to get .tar.gz instead of .tgz		
     archiveExtension = "tar.gz" 
     compression = Compression.GZIP 
} 


//test {
//    testLogging.showStandardStreams = true
//}

// option to set java version on command line
// ./gradlew -P javaVersion=8
ext.javaVersion = project.hasProperty('javaVersion') ? project.getProperty('javaVersion') : '11'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

//mainClassName = "fi.csc.chipster.toolbox.ToolboxService"
mainClassName = "fi.csc.chipster.rest.ServerLauncher"

jar { 
	exclude 'log4j2-test.xml' 
} 

// use log4j2.xml when running
sourceSets {
  main {
    resources {
      exclude 'log4j2-test.xml'
    }
  }
}
  

run {
    standardInput = System.in
}


//checkstyle {
//    configFile = 'config/checkstyle/google_checks.xml' as File
//    ignoreFailures = true
//}

//tasks.withType(Checkstyle) {
//    include "fi/csc/chipster/toolbox/**"
//}

test {
    //exclude "fi/csc/chipster/sessiondb/AdminResourceTest.class"
    //exclude "fi/csc/chipster/sessiondb/EventTest.class"
    //exclude "fi/csc/chipster/scheduler/SchedulerTest.class"

}


task checkTools(type: JavaExec) {
  dependsOn classes
  classpath sourceSets.test.runtimeClasspath
  mainClass = "fi.csc.chipster.toolbox.ToolboxLoadTest"
}


dependencies {

	// logging
	// stay in 2.+ , because 3.0.0-beta1 is compiled with Java 17 
    implementation "org.apache.logging.log4j:log4j-api:2.+"
    implementation "org.apache.logging.log4j:log4j-core:2.+"
    implementation "org.apache.logging.log4j:log4j-jul:2.+"
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:2.+"

    // jersey
    implementation "org.glassfish.jersey.containers:jersey-container-grizzly2-http:3.1.5"
    implementation "org.glassfish.jersey.inject:jersey-hk2:3.1.5"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:3.1.5"
    implementation "org.glassfish.jersey.ext:jersey-bean-validation:3.1.5" // @NonNull needs this 
        
    // Jersey in Jetty (session-worker)            
    implementation "org.glassfish.jersey.containers:jersey-container-servlet-core:3.1.5"    
    
    // jetty for session-worker servlet ( 12 would require Java 17 )
    implementation "org.eclipse.jetty:jetty-servlet:11.0.19"
    implementation "org.eclipse.jetty:jetty-server:11.0.19"

    // websockets 
    implementation "org.eclipse.jetty.websocket:websocket-jakarta-server:11.0.19"
    
    // cache settings in web-server
    implementation "org.eclipse.jetty:jetty-rewrite:11.0.19"    
        
    // jackson
	implementation "com.fasterxml.jackson.core:jackson-core:2.16.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1"
    
    // config files
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.1"
	
    // hibernate
    implementation "org.hibernate:hibernate-core:5.6.15.Final"
    implementation "org.hibernate:hibernate-c3p0:5.6.15.Final"
    implementation "org.postgresql:postgresql:+"
    
    // flyway
    implementation "org.flywaydb:flyway-core:7.+"
    
    // db backups
    implementation "com.amazonaws:aws-java-sdk-s3:+"

	// other
    implementation "commons-io:commons-io:+"
    implementation "org.apache.commons:commons-text:+"
    
    // rxJava
    implementation "io.reactivex.rxjava3:rxjava:3.+"
    
    implementation "com.sun.mail:javax.mail:+"
    
    // tsv parser
    implementation "com.univocity:univocity-parsers:+"
    
    // OpenID Connect
    implementation "com.nimbusds:oauth2-oidc-sdk:+"
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:+',
    		'org.bouncycastle:bcpkix-jdk15on:+'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:+',
            // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
            //'org.bouncycastle:bcprov-jdk15on:1.60',
            'io.jsonwebtoken:jjwt-jackson:+'
            
    // LDAP authentication with LdapExtLoginModule
    implementation("org.picketbox:picketbox:+") {
    	// don't install dependencies to avoid conflicts and we only want that one class
        transitive = false
    }
            
    // Chipster Java tools
	implementation "com.github.samtools:htsjdk:2.6.1"            
 
    testImplementation "org.junit.jupiter:junit-jupiter:5.+"
}
